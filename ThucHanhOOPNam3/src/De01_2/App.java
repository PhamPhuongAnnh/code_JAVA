/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package De01_2;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import java.util.Vector;

public class App {
    public static void main(String[] args) {
        var productFilePath = "./list_product";
        var customerFilePath = "./list_customer";
        int choose;
        var scanner = new Scanner(System.in);
        DanhSachSanPham danhSachSanPham = new DanhSachSanPham();
        DanhSachKhachHang danhSachKhachHang = new DanhSachKhachHang();
        DanhSachHoaDon danhSachHoaDon = new DanhSachHoaDon();
        do {
            System.out.println("1. Nhap San pham");
            System.out.println("2. Nhap Khach hang");
            System.out.println("3. Nhap San pham tu database");
            System.out.println("4. Nhap Khach hang tu database");
            System.out.println("5. In San pham");
            System.out.println("6. In Khach hang");
            System.out.println("7. Doi Thong tin Khach hang");
            System.out.println("8. Tao Hoa don");
            System.out.println("9. Luu San pham");
            System.out.println("10. Luu Khach Hang");
            System.out.println("11. In hoa don");

            choose = Integer.parseInt(scanner.nextLine());
            if (choose == 1) {
                try {
                    danhSachSanPham.add(SanPham.input(scanner, true));
                } catch (ParseException e) {
                    e.printStackTrace();
                }
            } else if (choose == 2) {
                try {
                    danhSachKhachHang.add(KhachHang.input(scanner, true));
                } catch (ParseException e) {
                    e.printStackTrace();
                }
            } else if (choose == 3) {
                try {
                    var input = new Scanner(new FileInputStream(productFilePath));
                    danhSachSanPham = DanhSachSanPham.taoDanhSachSanPham(input, false);
                } catch (FileNotFoundException e) {
                } catch (ParseException e) {
                    System.out.println(e);
                }
            } else if (choose == 4) {
                try {
                    var input = new Scanner(new FileInputStream(customerFilePath));
                    danhSachKhachHang = DanhSachKhachHang.taoDanhSachKhachHang(input, false);
                } catch (FileNotFoundException e) {
                } catch (ParseException e) {
                    System.out.println(e);
                }
            } else if (choose == 5) {
                for (SanPham sp : danhSachSanPham) {
                    sp.printOut(System.out);
                }
            } else if (choose == 6) {
                for (KhachHang kh : danhSachKhachHang) {
                    kh.printOut(System.out);
                }
            } else if (choose == 7) {
                System.out.println("Nhap ma khach hang");
                var ma = scanner.nextLine();
                for (KhachHang kh : danhSachKhachHang) {
                    if (kh.maKhachHang == ma) {
                        System.out.print("Nhap ten khach hang");
                        kh.tenKhachHang = scanner.nextLine();
                        System.out.print("Nhap nam sinh");
                        kh.namSinh = Integer.parseInt(scanner.nextLine());
                    }
                }
            } else if (choose == 8) {
                HoaDon hd;
                try {
                    hd = HoaDon.input(scanner, danhSachKhachHang, danhSachSanPham);
                    danhSachHoaDon.add(hd);
                } catch (ParseException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }

            } else if (choose == 9) {
                try {
                    danhSachSanPham.inDanhSachSanPham(new PrintStream(productFilePath));
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                }
            } else if (choose == 10) {
                try {
                    danhSachKhachHang.inDanhSachKhachHang(new PrintStream(customerFilePath));
                } catch (FileNotFoundException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            } else if (choose == 11) {
                danhSachHoaDon.inDanhSachHoaDon(System.out);
            } else {
                choose = 0;
            }
        } while (!(choose == 0));
    }
}

class DanhSachKhachHang extends Vector<KhachHang> {
    static DanhSachKhachHang taoDanhSachKhachHang(Scanner s, boolean prompt)
            throws FileNotFoundException, ParseException {
        var ret = new DanhSachKhachHang();
        if (prompt) {
            System.out.println("Nhap so luong nhap");
        }
        int n = Integer.parseInt(s.nextLine());
        for (int i = 0; i < n; i++) {
            ret.add(KhachHang.input(s, prompt));
        }

        return ret;

    }

    void inDanhSachKhachHang(PrintStream s) {
        s.println(super.size());
        for (KhachHang kh : this) {
            kh.printOut(s);
        }
    }
}

class KhachHang {
    String maKhachHang;
    String tenKhachHang;
    int namSinh;
    String diaChiTo;
    String diaChiPhuong;
    String diaChiQuan;
    String diaChiThanhPho;

    static KhachHang input(Scanner s, boolean prompt) throws ParseException {
        var ret = new KhachHang();
        if (prompt) {
            System.out.print("Nhap ma khach hang");
            ret.maKhachHang = s.nextLine();
            System.out.print("Nhap ten khach hang");
            ret.tenKhachHang = s.nextLine();
            System.out.print("Nhap nam sinh");
            ret.namSinh = Integer.parseInt(s.nextLine());
            System.out.print("Nhap to");
            ret.diaChiTo = s.nextLine();
            System.out.print("Nhap phuong");
            ret.diaChiPhuong = s.nextLine();
            System.out.print("Nhap quan");
            ret.diaChiQuan = s.nextLine();
            System.out.print("Nhap thanh pho");
            ret.diaChiThanhPho = s.nextLine();
        } else {
            ret.maKhachHang = s.nextLine();
            ret.tenKhachHang = s.nextLine();
            ret.namSinh = Integer.parseInt(s.nextLine());
            ret.diaChiTo = s.nextLine();
            ret.diaChiPhuong = s.nextLine();
            ret.diaChiQuan = s.nextLine();
            ret.diaChiThanhPho = s.nextLine();
        }
        return ret;
    }

    void printOut(PrintStream s) {
        s.println(maKhachHang);
        s.println(tenKhachHang);
        s.println(namSinh);
        s.println(diaChiTo);
        s.println(diaChiPhuong);
        s.println(diaChiQuan);
        s.println(diaChiThanhPho);
    }
}

class DanhSachSanPham extends Vector<SanPham> {
    static DanhSachSanPham taoDanhSachSanPham(Scanner s, boolean prompt) throws FileNotFoundException, ParseException {
        var ret = new DanhSachSanPham();

        if (prompt) {
            System.out.println("Nhap so luong");
        }
        int n = Integer.parseInt(s.nextLine());
        for (int i = 0; i < n; i++) {
            SanPham new_sp = SanPham.input(s, prompt);
            for (SanPham sp : ret) {
                if (new_sp.maSanPham == sp.maSanPham) {
                    sp.soLuong += new_sp.soLuong;
                    continue;
                }
            }
            ret.add(new_sp);
        }

        return ret;

    }

    void inDanhSachSanPham(PrintStream s) {
        s.println(super.size());
        for (SanPham sp : this) {
            sp.printOut(s);
        }
    }
}

class SanPham {
    String maSanPham;
    String tenSanPham;
    int soLuong;
    int donGia;
    Date ngaySanXuat;

    static SanPham input(Scanner s, boolean prompt) throws ParseException {
        var ret = new SanPham();
        if (prompt) {
            System.out.print("Nhap ma san pham");
            ret.maSanPham = s.nextLine();
            System.out.print("Nhap ten san pham");
            ret.tenSanPham = s.nextLine();
            System.out.print("Nhap don gia");
            ret.donGia = Integer.parseInt(s.nextLine());
            System.out.print("Nhap so luong");
            ret.donGia = Integer.parseInt(s.nextLine());
            System.out.print("Nhap ngay san xuat dd/MM/yyyy");
            ret.ngaySanXuat = new SimpleDateFormat("dd/MM/yyyy").parse(s.nextLine());
        } else {
            ret.maSanPham = s.nextLine();
            ret.tenSanPham = s.nextLine();
            ret.donGia = Integer.parseInt(s.nextLine());
            ret.soLuong = Integer.parseInt(s.nextLine());
            ret.ngaySanXuat = new SimpleDateFormat("dd/MM/yyyy").parse(s.nextLine());
        }
        return ret;
    }

    SanPham copy() {
        var ret = new SanPham();
        ret.maSanPham = this.maSanPham;
        ret.tenSanPham = this.tenSanPham;
        ret.donGia = this.donGia;
        ret.ngaySanXuat = this.ngaySanXuat;
        ret.soLuong = this.soLuong;
        return ret;
    }

    void printOut(PrintStream s) {
        s.println(maSanPham);
        s.println(tenSanPham);
        s.println(donGia);
        s.println(new SimpleDateFormat("dd/MM/yyyy").format(ngaySanXuat));
    }
}

class DanhSachHoaDon extends Vector<HoaDon> {
    void inDanhSachHoaDon(PrintStream s) {
        s.println(super.size());
        for (HoaDon kh : this) {
            kh.printOut(s);
        }
    }
}

class HoaDon {
    KhachHang kh;
    DanhSachSanPham dsSanPham;

    int tongTien() {
        int ret = 0;
        for (SanPham sp : dsSanPham) {
            ret += sp.donGia * sp.soLuong;
        }
        return ret;
    }

    static HoaDon input(Scanner s, DanhSachKhachHang dsKH, DanhSachSanPham dsSP) throws ParseException {
        var ret = new HoaDon();
        System.out.print("Nhap ma khach hang");
        var maKH = s.nextLine();
        boolean found = false;
        for (KhachHang kh: dsKH) {
            if (kh.maKhachHang == maKH) {
                ret.kh = kh;
                found = true;
                break;
            }
        } 
        if (!found) {
            System.out.println("Khong thay khach hang");
        }

        int buyChoose;
        do {
            System.out.println("1. Them San pham");
            System.out.println("2. Xong");
            buyChoose = Integer.parseInt(s.nextLine());
            if (buyChoose == 1) {
                System.out.println("Ma SP");
                var maSP = s.nextLine();
                for (SanPham sp : dsSP) {
                    if (sp.maSanPham == maSP) {
                        var spThem = sp.copy();
                        System.out.println("So luong");
                        var sl = Integer.parseInt(s.nextLine());
                        spThem.soLuong = sl;
                        ret.dsSanPham.add(spThem);
                    }
                }
            } else if (buyChoose == 2) {
                ret.printOut(System.out);
                buyChoose = 0;
            }
        } while (!(buyChoose == 0));
        return ret;
    }

    void printOut(PrintStream s) {
        s.println(this.kh.tenKhachHang);
        s.println(this.tongTien());
    }
}
